/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.controladorMascota;
import Modelo.Cuenta;
import Modelo.Mascota;
import Modelo.Persona;
import Modelo.Rol;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Personal
 */
public class frmMascota extends javax.swing.JDialog {
    controladorMascota listaMascotas;
    ArrayList<Persona> listPersonas;
    /**
     * Creates new form frmMascota
     */
    public frmMascota(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        bloquearJtext();
        quemarDatosPrueba();//datos quemados para pruebas sin BD
        Tips();
        jButtonGuardar.setVisible(false);
        jButtonGuardar.disable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMascotas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jTextColorPelaje = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextNombreMascota = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxSexo = new javax.swing.JComboBox<>();
        jButtonModificar = new javax.swing.JButton();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jComboBoxTamaño = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Alertas = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextRaza = new javax.swing.JTextField();
        jTextEdad = new javax.swing.JTextField();
        jTextEspecie = new javax.swing.JTextField();
        jButtonCancelar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextPresentarNombrePersona = new javax.swing.JTextField();
        jTextPresentarCedulaPersona = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jTextBuscarCedula = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        AlertaBuscar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REGISTRAR MASCOTA");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setPreferredSize(new java.awt.Dimension(1366, 768));
        setSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitulo.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabelTitulo.setText("REGISTRAR MASCOTA");
        getContentPane().add(jLabelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, -1, -1));

        jTableMascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOMBRE ", "ESPECIE", "RAZA", "SEXO", "TAMAÑO", "DUEÑO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMascotas.setGridColor(new java.awt.Color(153, 153, 255));
        jScrollPane1.setViewportView(jTableMascotas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 1090, 246));

        jPanel1.setOpaque(false);
        jPanel1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jPanel1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel23.setText("Raza:");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, -1, -1));

        jTextColorPelaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextColorPelajeActionPerformed(evt);
            }
        });
        jPanel1.add(jTextColorPelaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 110, 155, 30));

        jLabel20.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel20.setText("Nombre:");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 57, -1, -1));

        jTextNombreMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNombreMascotaActionPerformed(evt);
            }
        });
        jPanel1.add(jTextNombreMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 270, 30));

        jLabel10.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel10.setText("Sexo: ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 50, -1));

        jComboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Macho", "Hembra" }));
        jPanel1.add(jComboBoxSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 90, 30));

        jButtonModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 90, 30));

        jButtonRegistrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 100, 30));

        jButtonGuardar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 90, 30));

        jLabel24.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel24.setText("Tamaño");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jComboBoxTamaño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Grande", "Mediano", "Pequeño" }));
        jPanel1.add(jComboBoxTamaño, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 100, 30));

        jLabel11.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel11.setText("Especie: ");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 60, 30));

        jLabel12.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel12.setText("Edad:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 87, -1));

        Alertas.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        Alertas.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(Alertas, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 170, 290, 30));

        jLabel25.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel25.setText("Color de Pelaje :");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 120, -1, -1));

        jTextRaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRazaActionPerformed(evt);
            }
        });
        jPanel1.add(jTextRaza, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 50, 155, 30));

        jTextEdad.setToolTipText("");
        jTextEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextEdadActionPerformed(evt);
            }
        });
        jPanel1.add(jTextEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, 155, 30));

        jTextEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextEspecieActionPerformed(evt);
            }
        });
        jPanel1.add(jTextEspecie, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 155, 30));

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 170, 90, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 480, 1080, 200));

        jPanel6.setOpaque(false);
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setText("Cédula ");
        jPanel6.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, 20));
        jPanel6.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 148, -1, -1));

        jTextPresentarNombrePersona.setEditable(false);
        jPanel6.add(jTextPresentarNombrePersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 210, 30));

        jTextPresentarCedulaPersona.setEditable(false);
        jPanel6.add(jTextPresentarCedulaPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 170, 30));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("Nombre");
        jPanel6.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 630, 70));

        jTextBuscarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextBuscarCedulaActionPerformed(evt);
            }
        });
        getContentPane().add(jTextBuscarCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 310, 30));

        jButtonBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, -1, 30));

        AlertaBuscar.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        AlertaBuscar.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(AlertaBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 100, 210, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Número de Cédula");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, -1, 30));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FONDOP1.jpg"))); // NOI18N
        jLabelFondo.setText("jLabel2");
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextColorPelajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextColorPelajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextColorPelajeActionPerformed

    private void jTextNombreMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNombreMascotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNombreMascotaActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
            modificarMascota();
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        // TODO add your handling code here:
        registrarMascota();
        
    }//GEN-LAST:event_jButtonRegistrarActionPerformed
    
    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        guardarModificacion();
        
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jPanel1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jPanel1AncestorAdded

    }//GEN-LAST:event_jPanel1AncestorAdded

    private void jTextRazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRazaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextRazaActionPerformed

    private void jTextEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEdadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEdadActionPerformed

    private void jTextEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEspecieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEspecieActionPerformed

    private void jTextBuscarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextBuscarCedulaActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jTextBuscarCedulaActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        buscarMascota();
    }//GEN-LAST:event_jButtonBuscarActionPerformed
    
    
    
    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed
   
    public void quemarDatosPrueba(){
        if(listaMascotas==null){
            listaMascotas=new controladorMascota();
            listaMascotas.crearLista();
        }
        listPersonas = new ArrayList<>();
        Rol r = new Rol("Administrador");
        Cuenta c = new Cuenta("CTA1", "123", true);
        Persona p1 = new Persona("PSN01", "CARLOS", "ORDOÑES", "GMAIL", "01", "2572220", "Argelia", r, c);
        Persona p2 = new Persona("PSN01", "JORGE", "PEÑA", "GMAIL", "02", "2587220", "San pedro", r, c);
        listPersonas.add(p1);
        listPersonas.add(p2);
        listaMascotas.getListaMascota().clear();
        listaMascotas.agregarMacota("M01", "LILY", 5,"Labrador Retriever" ,"Perro", "Grande", "Hembra", "Gris", p2);
        listaMascotas.agregarMacota("M02", "CAYLIN", 2, "Doverman","Perro" , "Grande", "Hembra", "Gris", p2);
        listaMascotas.agregarMacota("M03", "DON GATO", 1, "Bombay","Gato" , "Pequeño", "Macho", "NEGRO", p2);
        listaMascotas.agregarMacota("M04", "Garfiel", 4, "Siames","Gato" , "Mediano", "Macho", "Gris", p1);
        listaMascotas.agregarMacota("M05", "TOBY", 4, "Perro", "Beagle", "Mediano", "Macho", "Gris", p1);
    }
    public void registrarMascota(){
        if(listaMascotas==null){
            listaMascotas=new controladorMascota();
            listaMascotas.crearLista();
        }
        habititalJtext();
        System.out.println(jTextPresentarCedulaPersona.getText());
        if(!jTextPresentarCedulaPersona.getText().equals("")){//verifico si se ha buscado una persona
            if(!jTextNombreMascota.getText().equals("")&&!jTextEspecie.getText().equals("")&&!jTextRaza.getText().equals("")
               &&!jTextEdad.getText().equals("")&&!jTextColorPelaje.getText().equals("")){//verifico si se a llenado los campos
                if(esNumerico(jTextEdad.getText())){//verifico si la edad se ha ingresado solo numeros
                    int i =0;
                    boolean encontrado = false;
                    while (i< listPersonas.size()||encontrado==false ) {                        
                        if(listPersonas.get(i).getCedula().equals(jTextPresentarCedulaPersona.getText())){
                            encontrado=true;
                        }
                        i++;
                    }
                    int edad = Integer.parseInt(jTextEdad.getText().trim());
                    String nombreMascota = jTextNombreMascota.getText().trim();
                    listaMascotas.agregarMacota("MT01",nombreMascota , edad, jTextRaza.getText().trim(), jTextEspecie.getText().trim(), jComboBoxTamaño.getSelectedItem().toString(), 
                                               jComboBoxSexo.getSelectedItem().toString(), jTextColorPelaje.getText().trim(), listPersonas.get(i-1));
                    limpiarTabla();
                    llenarTabla(listaMascotas.getListaMascota());
                    limpiarJtext();
                    jTextPresentarCedulaPersona.setText("");
                    jTextPresentarNombrePersona.setText("");
                    Alertas.setText("");
                }else{
                    jTextEdad.setText("");
                    Alertas.setText("INGRESE LA EDAD EN NUMEROS");
                }
            }else{
                Alertas.setText("LLENE TODOS LOS CAMPOS");
            }
        }else{
            Alertas.setText("BUSQUE AL DUEÑO DE LA MASCOTA");
        }
    }
    public void modificarMascota(){
        if(!jTextPresentarCedulaPersona.getText().equals("")){
            if(jTableMascotas.getSelectedRow()>=0){
                bloquearJtext();
                DefaultTableModel modelo = (DefaultTableModel) jTableMascotas.getModel();
                String nombreM = (String) modelo.getValueAt(jTableMascotas.getSelectedRow(), 0);
                String cedula = jTextPresentarCedulaPersona.getText().trim();
                boolean encontrado=false;
                for (int i = 0; i < listaMascotas.getListaMascota().size(); i++) {
                    if(listaMascotas.getListaMascota().get(i).getNombre().equals(nombreM)&&
                       listaMascotas.getListaMascota().get(i).getPersona().getCedula().equals(cedula)){
                        jTextNombreMascota.setText(listaMascotas.getListaMascota().get(i).getNombre());
                        String s = listaMascotas.getListaMascota().get(i).getTamanio();
                        int index;
                        if(s.equals("Grande"))index=0;
                        else if(s.equals("Mediano"))index=1;
                        else index=2;
                        jComboBoxTamaño.setSelectedIndex(index);
                        jComboBoxTamaño.enable();
                        jTextColorPelaje.setText(listaMascotas.getListaMascota().get(i).getColorPelaje());
                        jTextEdad.setText(listaMascotas.getListaMascota().get(i).getEdad()+"");
                        jTextEdad.enable();
                        jTextRaza.setText(listaMascotas.getListaMascota().get(i).getRaza());
                        String s1 = listaMascotas.getListaMascota().get(i).getSexo();
                        int index1;
                        if(s1.equals("Macho"))index1=0;
                        else index1=1;
                        jComboBoxSexo.setSelectedIndex(index1);
                        jTextEspecie.setText(listaMascotas.getListaMascota().get(i).getEspecie());
                        encontrado=true;
                    }
                }
                if(encontrado==true){
                    jButtonGuardar.setVisible(true);
                    jButtonGuardar.enable();
                    jButtonRegistrar.disable();
                    jButtonRegistrar.setVisible(false);
                }
            }else{
                Alertas.setText("SELECCIONE UNA FILA");
            }
        }else{
             Alertas.setText("BUSQUE AL DUEÑO DE LA MASCOTA");
             limpiarTabla();
        }
    }
    public void buscarMascota(){
        if(esNumerico(jTextBuscarCedula.getText())==true){
            int cont =0;
            ArrayList<Mascota> lista;
            String buscadaN="";
            for (int i = 0; i < listPersonas.size(); i++) {
                if(listPersonas.get(i).getCedula().equals(jTextBuscarCedula.getText())){
                    cont++;
                    buscadaN=listPersonas.get(i).getNombre().toUpperCase()+" "+listPersonas.get(i).getApellido().toUpperCase();
                }
            }
            if(cont!=0){//si se encotro la cedula
                jTextPresentarNombrePersona.setText(buscadaN);
                jTextPresentarCedulaPersona.setText(jTextBuscarCedula.getText());
                lista=listaMascotas.buscarMascotas(jTextBuscarCedula.getText());
                llenarTabla(lista);
                habititalJtext();
                actualizarJtext();
                jTextBuscarCedula.setText("");
                AlertaBuscar.setText("");
            }else{
                AlertaBuscar.setText("PERSONA NO ENCONTRADA");
                limpiarTabla();
                jTextBuscarCedula.setText("");
                jTextPresentarNombrePersona.setText("");
                jTextPresentarCedulaPersona.setText("");
            }
        }else{
            AlertaBuscar.setText("INGRESE SOLO NUMEROS");
            jTextBuscarCedula.setText("");
            jTextPresentarNombrePersona.setText("");
            jTextPresentarCedulaPersona.setText("");
            limpiarTabla();
        }
    }
    public void guardarModificacion(){
        if(esNumerico(jTextEdad.getText().trim())==true){
            int edad = Integer.parseInt(jTextEdad.getText());
            for (int i = 0; i < listaMascotas.getListaMascota().size(); i++) {
                if(jTextNombreMascota.getText().equals(listaMascotas.getListaMascota().get(i).getNombre())
                &&jTextEspecie.getText().equals(listaMascotas.getListaMascota().get(i).getEspecie())
                &&jTextPresentarCedulaPersona.getText().equals(listaMascotas.getListaMascota().get(i).getPersona().getCedula())){
                    listaMascotas.getListaMascota().get(i).setEdad(edad);
                    listaMascotas.getListaMascota().get(i).setTamanio(jComboBoxTamaño.getSelectedItem().toString());
                }
            }
            jTextPresentarCedulaPersona.setText("");
            jTextPresentarNombrePersona.setText("");
            limpiarJtext();
            limpiarTabla();
            jButtonGuardar.setVisible(false);
            jButtonRegistrar.enable();
            jButtonRegistrar.setVisible(true);
            llenarTabla(listaMascotas.getListaMascota());
        }else{
            Alertas.setText("INGRESE LA EDAD EN NUMEROS");
        }
    }
    public void llenarTabla(ArrayList<Mascota> lista){
        
        DefaultTableModel modelo = new DefaultTableModel(new String[]{"NOMBRE","ESPECIE","RAZA","SEXO","TAMAÑO","DUEÑO"},lista.size());
        jTableMascotas.setModel(modelo);
        TableModel modeloDatos = jTableMascotas.getModel();
        for (int i = 0; i < lista.size(); i++) {
            Mascota mascota= lista.get(i);
            modeloDatos.setValueAt(mascota.getNombre(), i, 0);
            modeloDatos.setValueAt(mascota.getEspecie(), i, 1);
            modeloDatos.setValueAt(mascota.getRaza(), i, 2);
            modeloDatos.setValueAt(mascota.getSexo(), i, 3);
            modeloDatos.setValueAt(mascota.getTamanio(), i, 4);
            String dueño = mascota.getPersona().getNombre()+" "+mascota.getPersona().getApellido();
            modeloDatos.setValueAt(dueño, i, 5);
        }
    }
    private void limpiarTabla(){
        DefaultTableModel modelo = new DefaultTableModel(new String[]{"NOMBRE","ESPECIE","RAZA","SEXO","TAMAÑO","DUEÑO"},0);
        jTableMascotas.setModel(modelo);
        jTableMascotas.updateUI();
    }
    private static boolean esNumerico(String cadena){
	try {
		Integer.parseInt(cadena);
		return true;
	} catch (NumberFormatException nfe){
		return false;
	}
    }
    
    public void limpiarJtext(){
        jTextNombreMascota.setText("");
        jTextColorPelaje.setText("");
        jTextEdad.setText("");
        jTextRaza.setText("");
        jTextEspecie.setText("");
    } 
    public void bloquearJtext(){
        jTextNombreMascota.disable();
        jComboBoxTamaño.disable();
        jTextColorPelaje.disable();
        jTextEdad.disable(); 
        jTextRaza.disable();
        jComboBoxSexo.disable();
        jTextEspecie.disable();
    }
    public void habititalJtext(){
        jTextNombreMascota.enable();
        jComboBoxTamaño.enable();
        jTextColorPelaje.enable();
        jTextEdad.enable();
        jTextRaza.enable();
        jComboBoxSexo.enable();
        jTextEspecie.enable();
    }
    public void actualizarJtext(){
        jTextNombreMascota.updateUI();
        jComboBoxTamaño.updateUI();
        jTextColorPelaje.updateUI();
        jTextEdad.updateUI();
        jTextRaza.updateUI();
        jComboBoxSexo.updateUI();
        jTextEspecie.updateUI();
    }
    public void Tips(){
       jTextBuscarCedula.setToolTipText("Ingrese la cedula del dueño de la mascota. ");
       jButtonModificar.setToolTipText("Seleccione la mascota de la tabla antes de modificar.");
       jTextEdad.setToolTipText("Ingrese la edad en años.");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmMascota dialog = new frmMascota(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AlertaBuscar;
    private javax.swing.JLabel Alertas;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JComboBox<String> jComboBoxSexo;
    private javax.swing.JComboBox<String> jComboBoxTamaño;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMascotas;
    private javax.swing.JTextField jTextBuscarCedula;
    private javax.swing.JTextField jTextColorPelaje;
    private javax.swing.JTextField jTextEdad;
    private javax.swing.JTextField jTextEspecie;
    private javax.swing.JTextField jTextNombreMascota;
    private javax.swing.JTextField jTextPresentarCedulaPersona;
    private javax.swing.JTextField jTextPresentarNombrePersona;
    private javax.swing.JTextField jTextRaza;
    // End of variables declaration//GEN-END:variables
}
